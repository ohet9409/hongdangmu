package goods_board.controller;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.multipart.MultipartRequest;
import org.springframework.web.servlet.ModelAndView;

import goods_board.bean.Goods_boardDTO;
import users.bean.UsersDTO;
import users.dao.UsersDAO;
@Controller
public class Goods_boardController {
	@Autowired
	private Goods_boardService service;
	
	@RequestMapping(value = "/goods/boardList.do", method = RequestMethod.POST) 
	public ModelAndView boardList(HttpServletRequest request) {
		String str_pg = request.getParameter("pg");
		int pg = 1;
		if(str_pg != null) {
			pg=	Integer.parseInt(str_pg);
		}
		System.out.println("pg = " + pg);
		int endNum = pg * 10;
		int startNum = endNum - 9;

		List<Goods_boardDTO> list = service.boardList(startNum, endNum);
		System.out.println(list.size());
		int totalMember  = service.getTotalA();	// 총회원수
		int totalP = (totalMember + 4) / 5;	// 총페이지수
		
		int startPage = (pg-1) / 3*3 + 1;
		int endPage = startPage + 2;
		if(totalP < endPage) endPage = totalP;
		
		String rt = null;
		int total = list.size();	// 조회된 데이터 수
		// 조회된 데이터 수로 성공/실패 판단
		if(total > 0) {
			rt = "OK";
		} else {
			rt = "FAIL";
		}
		// json 객체 생성
		JSONObject json = new JSONObject();
		json.put("rt", rt);
		json.put("total", total);
		
		if(total > 0) {
			JSONArray item = new JSONArray();
			for(int i=0; i<list.size(); i++) {
				Goods_boardDTO boardDTO = list.get(i);
				JSONObject temp = new JSONObject();
				temp.put("user_code", boardDTO.getUser_code());
				temp.put("area", boardDTO.getArea());
				temp.put("board_date", boardDTO.getBoard_date());
				temp.put("category_code", boardDTO.getCategory_code());
				temp.put("content", boardDTO.getContent());
				temp.put("image0", boardDTO.getImage0());
				temp.put("image1", boardDTO.getImage1());
				temp.put("image2", boardDTO.getImage2());
				temp.put("interest_count", boardDTO.getInterest_count());
				temp.put("lat", boardDTO.getLat());
				temp.put("lng", boardDTO.getLng());
				temp.put("num", boardDTO.getNum());
				temp.put("price", boardDTO.getPrice());
				temp.put("readcount", boardDTO.getReadcount());
				temp.put("reply_count", boardDTO.getReply_count());
				temp.put("subject", boardDTO.getSubject());
				
				
				item.add(i, temp);
				json.put("item", item);
			}
		}
		System.out.println(json);
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.addObject("list", list);
		modelAndView.addObject("pg", pg);
		modelAndView.addObject("startPage", startPage);
		modelAndView.addObject("endPage", endPage);
		modelAndView.addObject("totalP", totalP);
		modelAndView.addObject("json", json);
		
		modelAndView.setViewName("/users/delete.jsp");
		return modelAndView;
	}
	
	@RequestMapping(value = "/goods/list.do", method = RequestMethod.POST)
	public ModelAndView list(HttpServletRequest request) {			
		ModelAndView modelAndView = new ModelAndView();
		// DB
		Goods_boardDTO dao = new Goods_boardDTO();
		List<Goods_boardDTO> list = service.list();

		// JSON
		String rt = null;
		int total = list.size(); // 조회된 데이터 수
		//	조회된 데이터 수로 성공/실패 판단
		if (total > 0) {
			rt = "OK";
		} else {
			rt = "Fail";
		}
		//	json 객체 생성
		JSONObject json = new JSONObject();
		json.put("rt", rt);
		json.put("total", total);
		//	json 배열 만들기
		if (total > 0) {
			JSONArray item = new JSONArray();

			for (int i = 0; i < list.size(); i++) {
				Goods_boardDTO boardDTO = list.get(i);
				JSONObject temp = new JSONObject();
				
				temp.put("user_code", boardDTO.getUser_code());
				temp.put("area", boardDTO.getArea());
				temp.put("board_date", boardDTO.getBoard_date());
				temp.put("category_code", boardDTO.getCategory_code());
				temp.put("content", boardDTO.getContent());
				temp.put("image0", boardDTO.getImage0());
				temp.put("image1", boardDTO.getImage1());
				temp.put("image2", boardDTO.getImage2());
				temp.put("interest_count", boardDTO.getInterest_count());
				temp.put("lat", boardDTO.getLat());
				temp.put("lng", boardDTO.getLng());
				temp.put("num", boardDTO.getNum());
				temp.put("price", boardDTO.getPrice());
				temp.put("readcount", boardDTO.getReadcount());
				temp.put("reply_count", boardDTO.getReply_count());
				temp.put("subject", boardDTO.getSubject());
				item.add(i, temp);
				
			}
			//	json 객체에 배열 추가
			json.put("item", item);
		}
		
		  System.out.println(json);
		  modelAndView.setViewName("/users/delete.jsp"); 
		  //modelAndView.addObject("su",su);
		  modelAndView.addObject("json", json);
		  //System.out.println("su = " + su);
		 		
		return modelAndView;
	}
	
	@RequestMapping(value = "/goods/getTotalA.do", method = RequestMethod.POST)
	public ModelAndView getTotalA(HttpServletRequest request) {

		int su = service.getTotalA();
		String rt = "";
		if (su > 0) {
			rt = "OK";
		} else {
			rt = "Fail";
		}
		JSONObject json = new JSONObject();
		json.put("rt", rt);
		JSONArray item = new JSONArray();
		JSONObject temp = new JSONObject();
		temp.put("count", su);
		item.add(0, temp);
		json.put("item", item);
		System.out.println(json);
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("/users/delete.jsp");
		// modelAndView.addObject("su", su);
		modelAndView.addObject("json", json);

		// System.out.println("su = " + su);

		return modelAndView;
	}
	
	@RequestMapping(value = "/goods/boardView.do", method = RequestMethod.POST)
	public ModelAndView boardView(HttpServletRequest request) {
		String str_num = request.getParameter("num");

		int num = 0;
		if (str_num != null) {
			num = Integer.parseInt(str_num);
		}
		System.out.println("num = " + num);
		Goods_boardDTO boardDTO = service.boardView(num);

		String rt = "";
		if (boardDTO != null) {
			rt = "OK";
		} else {
			rt = "Fail";
		}
		JSONObject json = new JSONObject();
		json.put("rt", rt);
		JSONArray item = new JSONArray();
		JSONObject temp = new JSONObject();
		temp.put("user_code", boardDTO.getUser_code());
		temp.put("area", boardDTO.getArea());
		temp.put("board_date", boardDTO.getBoard_date());
		temp.put("category_code", boardDTO.getCategory_code());
		temp.put("content", boardDTO.getContent());
		temp.put("image0", boardDTO.getImage0());
		temp.put("image1", boardDTO.getImage1());
		temp.put("image2", boardDTO.getImage2());
		temp.put("interest_count", boardDTO.getInterest_count());
		temp.put("lat", boardDTO.getLat());
		temp.put("lng", boardDTO.getLng());
		temp.put("num", boardDTO.getNum());
		temp.put("price", boardDTO.getPrice());
		temp.put("readcount", boardDTO.getReadcount());
		temp.put("reply_count", boardDTO.getReply_count());
		temp.put("subject", boardDTO.getSubject());
		item.add(0, temp);
		json.put("item", item);
		System.out.println(json);
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("/users/delete.jsp");
		// modelAndView.addObject("su", su);
		modelAndView.addObject("json", json);

		// System.out.println("su = " + su);

		return modelAndView;
	}
	
	@RequestMapping(value = "/goods/boardDelete.do", method = RequestMethod.POST)
	public ModelAndView boardDelete(HttpServletRequest request) {
		String str_num = request.getParameter("num");

		int num = 0;
		if (str_num != null) {
			num = Integer.parseInt(str_num);
		}

		int su = service.boardDelete(num);

		String rt = "";
		if (su > 0) {
			rt = "OK";
		} else {
			rt = "Fail";
		}
		JSONObject json = new JSONObject();
		json.put("rt", rt);
		System.out.println(json);
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("/users/delete.jsp");
		modelAndView.addObject("su", su);
		modelAndView.addObject("json", json);

		System.out.println("su = " + su);

		return modelAndView;
	}
	@RequestMapping(value = "/goods/requestupload2.do")
    public String requestupload2(MultipartHttpServletRequest mtfRequest) {
        List<MultipartFile> fileList = mtfRequest.getFiles("file");
        String src = mtfRequest.getParameter("src");
        System.out.println("src value : " + src);

        String path = "C:\\image\\";

        for (MultipartFile mf : fileList) {
            String originFileName = mf.getOriginalFilename(); // 원본 파일 명
            long fileSize = mf.getSize(); // 파일 사이즈

            System.out.println("originFileName : " + originFileName);
            System.out.println("fileSize : " + fileSize);

            String safeFile = path + System.currentTimeMillis() + originFileName;
            try {
                mf.transferTo(new File(safeFile));
            } catch (IllegalStateException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }

        return "redirect:/";
    }




}
